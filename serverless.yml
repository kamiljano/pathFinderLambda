service: pathFinder

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  memorySize: 256
  versionFunctions: false

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        Ref: NotificationSNSTopic

# you can define service wide environment variables here
  environment:
    MAX_IPS_TO_SCAN_PER_INSTANCE: 25600
    NOTIFICATION_SNS_TOPIC:
      Ref: NotificationSNSTopic

package:
  include:
    - package.json
    - package-lock.json
    - handler.js
    - lib/**

functions:
  find:
    handler: jobCreator.createJob
    timeout: 120
    events:
      - http: 
          path: /find
          method: post
          request:
            parameters:
              querystrings:
                path: true
                from: true
                to: true
                regex: false
                

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    NotificationSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: matching-path-found
  Outputs:
    NotificationSNSTopic:
      Description: "SNS topic that the events will be published to, once a matching response is found"
      Value:
        Ref: NotificationSNSTopic
